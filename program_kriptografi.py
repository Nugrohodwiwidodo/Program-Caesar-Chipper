# -*- coding: utf-8 -*-
"""Program Kriptografi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13tUutaRXUhB8LU19XgiWhhXL_LoMfwYr
"""

#Program Kriptografi Caesar Chipper

"""Caesar chipper adalah algoritma yang mengubah kalimat yang memiliki fungsi menyandikan (enksripsi) dan mengembalikan ke bentuk semula (deskripsi).
Enkripsi dilakukan dengan menggeser ke kanan atau menjumlahkan ordinal aplhabet dengan konstanta tertentu, sedangkan deskripsi melakukan sebaliknya. Pergeseran menerapkan konsep rotasi, akan kembali ke huruf awal jika pergeseran ke kanan lebih dari "z" atau kembali ke huruf akhir (z) jika ke kiri lebih dari "a". Setiap huruf bisa diubah menjadi code point menggunakan tabel ASCII code.
"""

#Caesar Chipper 1

"""Menggeser huruf konsonan sebanyak 5 ke kanan, dan huruf vokal sebanyak 3 ke kiri. Menghilangkan spasi dari hasil enkripsi dan menambahkan kembali spasi pada hasil deskripsi. Error akan ditampilkan jika ada inputan selain alphabet dan spasi."""

#Proses Enkripsi
def enkripsi1(pesan): #Membuat fungsi enkripsi dengan menggeser huruf konsonan sebanyak 5 ke kanan, huruf vokal sebanyak 3 ke kiri, dengan posisi spasi yang sama
  global pesan1
  pesan1 = ''
  for k in pesan:  
    if k == ' ': #jika terdapat spasi pada pesan awal, akan ditambahkan spasi pada enkripsinya
      pesan1 += ' '
    elif k in vocal: #proses enkripsi untuk huruf vokal
      key = 3 #untuk huruf vokal akan digeser kekiri sebanyak 3
      if k.islower() == True: 
        pesan1 += chr(((ord(k) - 97 - key)) % 26 + 97) #ASCII code untuk huruf kecil dimulai dari huruf a dengan codenya 97, dengan z codenya 122
      else:
        pesan1 += chr(((ord(k) - 65 - key)) % 26 + 65) #ASCII code untuk huruf kapital dimulai dari huruf A dengan codenya 65, dengan Z codenya 90
    else:
      key = 5 #untuk huruf konsonan akan digeser kekanan sebanyak 5
      if k.islower() == True:
        pesan1 += chr(((ord(k) - 97 + key)) % 26 + 97)
      else:
        pesan1 += chr(((ord(k) - 65 + key)) % 26 + 65)
  return pesan1 #pesan1 adalah hasil enkripsi sesuai ketentuan dari pesan

def label_pesan(pesan3): #definisi fungsi pelabelan setiap huruf pada pesan, untuk memudahkan proses enkripsi ke deskripsi
  global label
  label = {}
  for k in pesan3:
    if k in vocal:
      label[k]=0 #0 untuk huruf vokal
    else:
      label[k]=1 #1 untuk huruf konsonan
  return label

def karakter(pesan): #fungsi untuk memeriksa apakah ada bilangan atau tidak
  pesan_S = ""
  for i in pesan:
    if i != " " :
      pesan_S += i
    else:
      continue
  return all(i.isalpha() for i in pesan_S)

#Proses deskripsi, menerjemahkan pesan yang telah disenkripsi
def dekripsi1(teks_enkripsi):
  K = [i for i in teks_enkripsi]
  L = [i for i in x]
  pesan2 = ''
  for j in range(len(teks_enkripsi)):
    if K[j] == ' ':
      pesan2 += ' '
    elif label[L[j]] == 0: #jika label dari suatu huruf bernilai 0, artinya asal hurufnya merupakan huruf vokal sehingga harus dikembalikan menjadi huruf vokal
      key = 3 #menggeser sebanyak 3 ke kanan untuk huruf yang berasal dari huruf vokal
      if K[j].islower() == True: 
        pesan2 += chr(((ord(K[j]) - 97 + key)) % 26 + 97) #pergeseran untuk huruf kecil
      else:
        pesan2 += chr(((ord(K[j]) - 65 + key)) % 26 + 65) #pergeseran untuk huruf kapital
    else:
      key = 5 #menggeser sebanyak 5 ke kiri untuk huruf yang berasal dari huruf vokal
      if K[j].islower() == True:
        pesan2 += chr(((ord(K[j]) - 97 - key)) % 26 + 97) #pergeseran untuk huruf kecil
      else:
        pesan2 += chr(((ord(K[j]) - 65 - key)) % 26 + 65) ##pergeseran untuk huruf kapital
  return pesan2

vocal = ['a','i','u','e','o','A','I','U','E','O']
main = False
while main == False:
  x = input('masukan pesan :')
  if karakter(x) == False:
    print('Error karena ada angka atau karakter lain') #jika didalam pesan yang diinput ada karakter selain alphabet, maka error ditanpilkan
  else:
    main = True
    label_kata = label_pesan(x)
    chaesar = enkripsi1(x)
print(chaesar)

dekripsi1("Hlswxi xmlrqi pfqq Wxxuryfs yl rxpb Wrxxfx olfs ymb bxw")

